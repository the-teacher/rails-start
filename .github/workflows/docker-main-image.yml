name: Build and Push Main Docker Image

on:
  push:
    branches: ["main", "master"]
    paths:
      - "docker/IMAGES/_Main.Dockerfile"
      - ".github/workflows/docker-main-image.yml"
  pull_request:
    branches: ["main", "master"]
    paths:
      - "docker/IMAGES/_Main.Dockerfile"
  workflow_dispatch:
    inputs:
      base_image_source:
        description: "Base image source"
        required: true
        default: "ghcr"
        type: choice
        options:
          - ghcr
          - dockerhub

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/rails-start.main
  DOCKERHUB_IMAGE_NAME: iamteacher/rails-start.main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup QEMU for multi-arch builds support
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Setup Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Determine base image source
      - name: Determine base image source
        id: base_image
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            SOURCE="${{ github.event.inputs.base_image_source }}"
          else
            # Default to GHCR for automatic pushes
            SOURCE="ghcr"
          fi

          if [[ "$SOURCE" == "ghcr" ]]; then
            BASE_IMAGE="ghcr.io/the-teacher/rails-start.base:latest"
          else
            BASE_IMAGE="iamteacher/rails-start.base:latest"
          fi

          echo "base_image=${BASE_IMAGE}" >> $GITHUB_OUTPUT
          echo "Using base image: ${BASE_IMAGE}"

      # Login to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Generate image tags
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{branch}}

      # Build and push image for multi-arch
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./docker/IMAGES
          file: ./docker/IMAGES/_Main.Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASE_IMAGE=${{ steps.base_image.outputs.base_image }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

      # Output information after successful build
      - name: Image built successfully
        if: success()
        run: |
          echo "âœ… Main image built successfully!"
          echo "Base image: ${{ steps.base_image.outputs.base_image }}"
          echo "Platforms: linux/amd64, linux/arm64, linux/arm/v7"
          echo "Tags: ${{ steps.meta.outputs.tags }}"
