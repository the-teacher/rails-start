name: Clear GitHub Actions Cache

# Manual trigger only
on:
  workflow_dispatch:

jobs:
  clear-cache:
    name: Clear Cache
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write

    steps:
      - name: Get cache list via REST API
        id: fetch-caches
        run: |
          echo "üóëÔ∏è  Fetching all GitHub Actions caches via REST API..."

          curl -s \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${{ github.repository }}/actions/caches" \
            > /tmp/caches.json

          TOTAL=$(jq '.total_count' /tmp/caches.json)
          echo "Found $TOTAL cache entries"
          echo "cache_count=$TOTAL" >> $GITHUB_OUTPUT

      - name: Delete all caches via REST API (with retry)
        if: steps.fetch-caches.outputs.cache_count > 0
        run: |
          echo "üóëÔ∏è  Deleting all ${{ steps.fetch-caches.outputs.cache_count }} caches..."

          MAX_ITERATIONS=10
          ITERATION=1

          while [ $ITERATION -le $MAX_ITERATIONS ]; do
            echo ""
            echo "üìç Iteration $ITERATION/$MAX_ITERATIONS"
            
            # Fetch current list
            curl -s \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "https://api.github.com/repos/${{ github.repository }}/actions/caches" \
              > /tmp/caches_current.json
            
            CURRENT_COUNT=$(jq '.total_count' /tmp/caches_current.json)
            echo "Current cache count: $CURRENT_COUNT"
            
            if [ "$CURRENT_COUNT" -eq 0 ]; then
              echo "‚úÖ All caches cleared!"
              exit 0
            fi
            
            # Delete all caches in current list
            DELETED_IN_ITERATION=0
            jq -r '.actions_caches[] | .key' /tmp/caches_current.json | while read CACHE_KEY; do
              if [ ! -z "$CACHE_KEY" ]; then
                echo "  ‚Üí Deleting: $CACHE_KEY"
                
                curl -s -X DELETE \
                  -H "Accept: application/vnd.github+json" \
                  -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                  -H "X-GitHub-Api-Version: 2022-11-28" \
                  "https://api.github.com/repos/${{ github.repository }}/actions/caches?key=$CACHE_KEY" \
                  > /dev/null
                
                # Small delay to avoid rate limiting
                sleep 0.1
              fi
            done
            
            echo "  ‚è≥ Waiting 2 seconds before next iteration..."
            sleep 2
            
            ITERATION=$((ITERATION + 1))
          done

          echo "‚ö†Ô∏è  Reached max iterations. Some caches may remain."

      - name: Verify cache cleared
        run: |
          echo "üìä Verifying cache status..."

          RESPONSE=$(curl -s \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${{ github.repository }}/actions/caches")

          REMAINING=$(echo "$RESPONSE" | jq '.total_count')
          echo "Remaining caches: $REMAINING"

          if [ "$REMAINING" -gt 0 ]; then
            echo ""
            echo "‚ö†Ô∏è  Sample of remaining caches (first 5):"
            echo "$RESPONSE" | jq '.actions_caches[] | {key: .key, size_bytes: .size_in_bytes, created_at: .created_at}' | head -30
          else
            echo "‚úÖ All caches successfully cleared!"
          fi
