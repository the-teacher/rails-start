name: Clear GitHub Actions Cache

# Manual trigger only
on:
  workflow_dispatch:

jobs:
  clear-cache:
    name: Clear Cache
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write

    steps:
      - name: Clear all caches
        run: |
          echo "üóëÔ∏è  Fetching all GitHub Actions caches..."

          # Get total count
          TOTAL=$(gh actions-cache list -R ${{ github.repository }} --json id --jq '. | length')
          echo "Found $TOTAL cache entries"

          # Delete all caches in batches
          PAGE=1
          BATCH_SIZE=100
          while [ $PAGE -le 10 ]; do
            echo "Processing batch $PAGE..."
            CACHES=$(gh actions-cache list -R ${{ github.repository }} \
              --limit $BATCH_SIZE \
              --sort created-at \
              --direction desc \
              --json id \
              --jq -r '.[].id')
            
            if [ -z "$CACHES" ]; then
              echo "No more caches to delete"
              break
            fi
            
            echo "$CACHES" | while read CACHE_ID; do
              if [ ! -z "$CACHE_ID" ]; then
                echo "  ‚Üí Deleting cache ID: $CACHE_ID"
                gh actions-cache delete $CACHE_ID -R ${{ github.repository }} --confirm || true
              fi
            done
            
            PAGE=$((PAGE + 1))
          done

          echo "‚úÖ Cache cleanup completed!"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify cache status
        run: |
          echo "üìä Remaining cache entries:"
          COUNT=$(gh actions-cache list -R ${{ github.repository }} --json id --jq '. | length')
          echo "Total caches: $COUNT"

          if [ $COUNT -gt 0 ]; then
            echo ""
            echo "Sample of remaining caches:"
            gh actions-cache list -R ${{ github.repository }} --limit 5 --sort created-at --direction desc
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
